name: Build and create release by tag on demand

on:
  push:
    branches:
      - release
    tags:
      - 'v*'
  pull_request:
    branches:
      - release

env:
  ARTIFACT_NAME: ShareControl.jar
  ARTIFACT_DIRECTORY: target

jobs:
  build:
    name: Build the package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run the ktlint
        run: mvn -B ktlint:check

      - name: Build with Maven
        run: mvn -B clean package

      - name: Attach the test report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "${{ env.ARTIFACT_DIRECTORY }}/${{ env.ARTIFACT_NAME }}"

  releasing:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    needs:
      - build

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "${{ env.ARTIFACT_DIRECTORY }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ env.ARTIFACT_DIRECTORY }}/${{ env.ARTIFACT_NAME }}"
          asset_name: "${{ env.ARTIFACT_NAME }}"
          asset_content_type: application/java-archive